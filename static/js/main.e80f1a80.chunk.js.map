{"version":3,"sources":["components/Content/Profile/MyPosts/Posts/Posts.module.scss","components/Content/Dialogs/Dialogs.module.scss","components/Content/Users/User/User.module.scss","components/Content/Profile/ProfileInfo/ProfileInfo.module.scss","components/Content/Dialogs/Dialog/Dialog.module.scss","components/Navbar/Navbar.module.scss","components/Footer/Footer.module.scss","components/Header/Header.module.scss","components/Content/Content.module.scss","components/Content/Profile/Profile.module.scss","components/Content/Profile/MyPosts/MyPosts.module.scss","components/Content/Dialogs/Message/Message.module.scss","components/Content/Dialogs/AddMessage/AddMessage.module.scss","components/Content/Button/Button.module.scss","reportWebVitals.ts","images/ava.png","images/ava1.jpeg","images/ava2.jpeg","Redux/profile-reducer.ts","Redux/dialogs-reducer.ts","Redux/navbar-reducer.ts","Redux/music-reduсer.ts","Redux/settings-reduсer.ts","Redux/news-reduсer.ts","Redux/users-reduсer.ts","Redux/redux-store.ts","images/gold-elephant.png","components/Header/Header.tsx","components/Content/Profile/ProfileInfo/ProfileInfo.tsx","components/Content/Profile/MyPosts/Posts/Posts.tsx","components/Content/Profile/MyPosts/MyPostsContainer.tsx","components/Content/Profile/MyPosts/MyPosts.tsx","components/Content/Profile/Profile.tsx","components/Content/News/News.tsx","components/Content/Music/Music.tsx","components/Content/Settings/Settings.tsx","components/Content/Dialogs/Message/Message.tsx","components/Content/Dialogs/Dialog/Dialog.tsx","components/Content/Dialogs/AddMessage/AddMessage.tsx","components/Content/Dialogs/DialogsContainer.tsx","components/Content/Dialogs/Dialogs.tsx","components/Content/Button/Button.tsx","components/Content/Users/User/User.tsx","components/Content/Users/UsersContainer.tsx","components/Content/Users/Users.tsx","components/Content/Content.tsx","components/Navbar/Navbar.tsx","components/Footer/Footer.tsx","App.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ADD_POST","UPDATE_NEW_POST_TEXT","initialState","myPostsData","id","v1","img","img1","message","likesCount","img2","newPostText","UPDATE_NEW_MESSAGE_TEXT","ADD_MESSAGE","dialogsData","name","messagesData","newMessageText","navigation","pageName","link","FOLLOW_USER","UNFOLLOW_USER","SET_USERS","users","rootReducer","combineReducers","profilePage","state","action","type","post","messagesPage","newText","text","usersPage","map","user","userID","followed","navBar","newsPage","musicPage","settingsPage","store","createStore","Header","className","styles","header","src","image","alt","ProfileInfo","props","profileInfo","description","Posts","posts","item","postItem","MyPostsContainer","connect","dispatch","addPost","onChangePost","onChangePostAC","myPosts","value","onChange","e","currentTarget","onClick","Profile","profile","News","news","Music","music","Settings","settings","Message","Dialog","dialog","to","activeClassName","active","AddMessage","newDialogMessage","addMessage","event","changeMessage","placeholder","sendMessageClick","DialogsContainer","onSendMessageClick","updateNewMessageTextAC","dialogsElements","elem","messagesElements","dialogs","dialogsItems","messages","Button","callBack","children","finalClassName","button","User","photos","status","unFollowUser","followUser","titleButton","logo","small","info","UsersContainer","followUsersAC","unFollowUsersAC","setUser","setUsersAC","userItems","uniqueUrlName","length","axios","get","response","data","items","Content","content","path","render","from","Navbar","navLinkItems","nav","Footer","footer","join","App","ReactDOM","StrictMode","getState","bind","document","getElementById"],"mappings":"0GACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,SAAW,wBAAwB,IAAM,qB,mBCAxFD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,0BAA0B,OAAS,0B,mBCAhJD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,KAAO,qB,mBCA7ED,EAAOC,QAAU,CAAC,YAAc,iCAAiC,YAAc,mC,mBCA/ED,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,IAAM,oBAAoB,OAAS,yB,mBCArDD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,OAAS,yB,mBCA3DD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,QAAU,2B,mBCA5BD,EAAOC,QAAU,CAAC,QAAU,2B,mBCA5BD,EAAOC,QAAU,CAAC,QAAU,2B,kFCA5BD,EAAOC,QAAU,CAAC,QAAU,2B,mBCA5BD,EAAOC,QAAU,CAAC,WAAa,iC,wCCA/BD,EAAOC,QAAU,CAAC,OAAS,yB,iFCC3B,IAYeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,+BCTC,MAA0B,gCCA1B,MAA0B,kCCA1B,MAA0B,kCCanCQ,EAAW,WACXC,EAAuB,uBAEvBC,EAAe,CACnBC,YAAa,CACX,CAACC,GAAIC,cAAMC,IAAKC,EAAMC,QAAS,qBAAsBC,WAAY,GACjE,CAACL,GAAIC,cAAMC,IAAKI,EAAMF,QAAS,sBAAuBC,WAAY,KAEpEE,YAAa,ICjBTC,EAA0B,0BAC1BC,EAAc,cAGdX,EAAe,CACnBY,YAAa,CACX,CAACV,GAAIC,cAAMU,KAAM,OACjB,CAACX,GAAIC,cAAMU,KAAM,QACjB,CAACX,GAAIC,cAAMU,KAAM,QACjB,CAACX,GAAIC,cAAMU,KAAM,SAEnBC,aAAc,CACZ,CAACZ,GAAIC,cAAMG,QAAS,SACpB,CAACJ,GAAIC,cAAMG,QAAS,iBAEtBS,eAAgB,ICXZf,EAAe,CACnBgB,WAAY,CACV,CAACd,GAAIC,cAAMc,SAAU,UAAWC,KAAM,YACtC,CAAChB,GAAIC,cAAMc,SAAU,WAAYC,KAAM,YACvC,CAAChB,GAAIC,cAAMc,SAAU,QAASC,KAAM,UACpC,CAAChB,GAAIC,cAAMc,SAAU,OAAQC,KAAM,SACnC,CAAChB,GAAIC,cAAMc,SAAU,QAASC,KAAM,UACpC,CAAChB,GAAIC,cAAMc,SAAU,WAAYC,KAAM,eCbrClB,EAAe,GCAfA,EAAe,GCAfA,EAAe,GCGfmB,EAAc,cACdC,EAAgB,gBAChBC,EAAY,YAEZrB,EAAe,CAACsB,MAAO,ICGzBC,EAAcC,YAAgB,CAChCC,YPW4B,WAAgG,IAA/FC,EAA8F,uDAArE1B,EAAc2B,EAAuD,uCAC3H,OAAQA,EAAOC,MACb,KAAK9B,EAEGK,cAEKuB,EAAMjB,YAGjB,OAAO,2BACFiB,GADL,IAEEjB,YAAa,GACbR,YAAY,GAAD,mBAAMyB,EAAMzB,aAAZ,CAAyB,CAACC,GAAIC,cAAMC,IAAKA,EAAKE,QAASoB,EAAMjB,YAAaF,WAAY,OAErG,KAAKR,EACH,OAAO,2BACF2B,GADL,IAEEjB,YAAakB,EAAOE,OAExB,QACE,OAAOH,IO9BXI,aNQ4B,WAAkG,IAAjGJ,EAAgG,uDAAtE1B,EAAc2B,EAAwD,uCAC7H,OAAQA,EAAOC,MACb,KAAKlB,EACH,OAAO,2BACFgB,GADL,IAEEX,eAAgBY,EAAOI,UAE3B,KAAKpB,EACH,IAAMqB,EAAON,EAAMX,eACnB,OAAO,2BACFW,GADL,IAEEX,eAAgB,GAChBD,aAAa,GAAD,mBAAMY,EAAMZ,cAAZ,CAA0B,CAACZ,GAAIC,cAAMG,QAAS0B,OAE9D,QACE,OAAON,IMtBXO,UDJ0B,WAA2E,IAA1EP,EAAyE,uDAAlD1B,EAAc2B,EAAoC,uCACpG,OAAQA,EAAOC,MACb,KAAKT,EACH,OAAO,2BACFO,GADL,IAEEJ,MAAOI,EAAMJ,MAAMY,KAAI,SAAAC,GAAI,OAAIA,EAAKjC,KAAOyB,EAAOS,OAAnB,2BAAgCD,GAAhC,IAAsCE,UAAU,IAAQF,OAE3F,KAAKf,EACH,OAAO,2BACFM,GADL,IAEEJ,MAAOI,EAAMJ,MAAMY,KAAI,SAAAC,GAAI,OAAIA,EAAKjC,KAAOyB,EAAOS,OAAnB,2BAAgCD,GAAhC,IAAsCE,UAAU,IAASF,OAE5F,KAAKd,EACH,OAAO,2BACFK,GADL,IACYJ,MAAM,YAAKK,EAAOL,SAEhC,QACE,OAAOI,ICZXY,OLG2B,WAA4D,IAA3DZ,EAA0D,uDAAtC1B,EAChD,OAAO0B,GKHPa,SFbyB,WAA6C,IAA5Cb,EAA2C,uDAA9B1B,EACvC,OAAO0B,GEaPc,UJd0B,WAA6C,IAA5Cd,EAA2C,uDAA9B1B,EACxC,OAAO0B,GIcPe,aHf6B,WAA6C,IAA5Cf,EAA2C,uDAA9B1B,EAC3C,OAAO0B,KGiBEgB,EAAQC,YAAYpB,G,iCCtBhB,G,YAAA,IAA0B,2C,wBCI5BqB,EAAS,WAClB,OACI,yBAAQC,UAAWC,IAAOC,OAA1B,UACI,8BACI,qBAAKC,IAAKC,EAAOC,IAAI,SAEzB,sE,0DCPCC,EAAc,SAACC,GAC1B,OACE,sBAAKP,UAAWC,IAAOO,YAAvB,UACE,8BACE,qBACEL,IACE,4EAEFE,IAAK,UAGT,qBAAKL,UAAWC,IAAOQ,YAAvB,mC,0CCQSC,EAdoB,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MACnC,OACE,qBAAKX,UAAWC,IAAOU,MAAvB,SACGA,EAAMtB,KAAI,SAACuB,GAAD,OACT,sBAAKZ,UAAWC,IAAOY,SAAvB,UACE,qBAAKb,UAAWC,IAAO1C,IAAK4C,IAAKS,EAAKrD,IAAK8C,IAAI,QAC9CO,EAAKnD,QACN,uCAAS,+BAAOmD,EAAKlD,kBAHekD,EAAKvD,U,0BCqBtCyD,EAAmBC,aAjBR,SAAClC,GACvB,MAAO,CACLD,YAAaC,EAAMD,gBAII,SAACoC,GAC1B,MAAO,CACLC,QAAS,WACPD,EZ4BG,CACLjC,KAAM9B,KY3BNiE,aAAc,SAAClC,GACVA,GAAMgC,EZ6Be,SAAChC,GAC7B,MAAO,CACLD,KAAM7B,EACN8B,KAAMA,GYhCcmC,CAAenC,QAKP+B,EC5BmB,SAAC,GAA6B,IAA5BnC,EAA2B,EAA3BA,YAAgB2B,EAAW,iBAU9E,OACE,sBAAKP,UAAWC,IAAOmB,QAAvB,UACE,yCACA,4BACE,0BACEC,MAAOzC,EAAYhB,YACnB0D,SAXa,SAACC,GACpB,IAAMvC,EAAOuC,EAAEC,cAAcH,MAC1BrC,GAAMuB,EAAMW,aAAalC,QAY1B,4BACE,wBAAQyC,QAnBE,WACdlB,EAAMU,WAkBF,wBAEF,cAAC,EAAD,CAAON,MAAO/B,EAAYxB,oBCtBnBsE,EAAU,WACrB,OACE,sBAAK1B,UAAWC,IAAO0B,QAAvB,UACE,cAAC,EAAD,IACA,cAACb,EAAD,Q,oBCNOc,GAAO,SAACrB,GACjB,OACI,qBAAKP,UAAWC,KAAO4B,KAAvB,mB,oBCFKC,GAAQ,SAACvB,GAClB,OACI,qBAAKP,UAAWC,KAAO8B,MAAvB,oB,oBCFKC,GAAW,SAACzB,GACvB,OACE,qBAAKP,UAAWC,KAAOgC,SAAvB,uB,wCCGSC,GAAU,SAAC3B,GACtB,OACE,qBAAKP,UAAWC,KAAOxC,QAAvB,SAAiC8C,EAAM9C,W,6BCD9B0E,GAAS,SAAC5B,GACrB,OACE,qBAAKP,UAAWC,KAAOmC,OAAvB,SACE,cAAC,KAAD,CAASC,GAAE,mBAAc9B,EAAMlD,IAAMiF,gBAAiBrC,KAAOsC,OAA7D,SAAsEhC,EAAMvC,U,2DCIrEwE,GAA4C,SAAC,GAA+C,EAA9CvD,aAA+C,IAAjCwD,EAAgC,EAAhCA,iBAAqBlC,EAAW,kBASvG,OACE,sBAAKP,UAAWC,KAAOyC,WAAvB,UACE,8BACI,0BAEEpB,SAbc,SAACqB,GACvB,IAAMxD,EAAOwD,EAAMnB,cAAcH,MAC7BlC,GAAMoB,EAAMqC,cAAczD,IAYtBkC,MAAOoB,EACPI,YAAY,yBAGlB,8BACE,wBAAQpB,QAfa,WACzBlB,EAAMuC,oBAcF,gCCDKC,GAAmBhC,aAlBR,SAAClC,GACvB,MAAO,CACLI,aAAcJ,EAAMI,aACpBwD,iBAAkB5D,EAAMI,aAAaf,mBAId,SAAC8C,GAC1B,MAAO,CACLgC,mBAAoB,WAClBhC,EpBmBG,CACLjC,KAAMjB,KoBlBN8E,cAAe,SAACzD,GACVA,GAAM6B,EpBoBsB,SAAC7B,GACrC,MAAO,CACLJ,KAAMlB,EACNqB,QAASC,GoBvBY8D,CAAuB9D,QAKhB4B,EC5BmB,SAAC,GAAyE,IAAxE9B,EAAuE,EAAvEA,aAAc+D,EAAyD,EAAzDA,mBAAoBJ,EAAqC,EAArCA,cAAeH,EAAsB,EAAtBA,iBAC9FS,EAAkBjE,EAAalB,YAAYsB,KAAI,SAAC8D,GAAD,OACnD,cAAC,GAAD,CAEEnF,KAAMmF,EAAKnF,KACXX,GAAI8F,EAAK9F,IAFJ8F,EAAK9F,OAMR+F,EAAmBnE,EAAahB,aAAaoB,KAAI,SAAC8D,GAAD,OACrD,cAAC,GAAD,CAEE1F,QAAS0F,EAAK1F,QACdJ,GAAI8F,EAAK9F,IAFJ8F,EAAK9F,OAMd,OACE,sBAAK2C,UAAWC,KAAOoD,QAAvB,UACE,qBAAKrD,UAAWC,KAAOqD,aAAvB,SACGJ,IAEH,sBAAKlD,UAAWC,KAAOsD,SAAvB,UACGH,EACD,cAAC,GAAD,CACEX,iBAAkBA,EAClBxD,aAAcA,EACd6D,iBAAkBE,EAClBJ,cAAeA,a,wCC3BZY,GAAoC,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,SAAUzD,EAAyB,EAAzBA,UAAW0D,EAAc,EAAdA,SAEhEC,EAAc,UAAM1D,KAAO2D,OAAb,YAAuB5D,GAE3C,OACE,wBAAQA,UAAW2D,EAAgBlC,QAASgC,EAA5C,SAAuDC,K,oBCM9CG,GAAgC,SAAC,GAIO,IAHLtE,EAGI,EAHJA,OAAQuE,EAGJ,EAHIA,OAAQ9F,EAGZ,EAHYA,KAChB+F,EAEI,EAFJA,OAAQvE,EAEJ,EAFIA,SACRwE,EACI,EADJA,aAAcC,EACV,EADUA,WAGtDC,EAAc1E,EAAW,WAAa,SAG5C,OACE,sBAAKQ,UAAWC,KAAOX,KAAvB,UACE,sBAAKU,UAAWC,KAAOkE,KAAvB,UACE,qBAAKhE,IAAK2D,EAAOM,MAAQN,EAAOM,MAAQ7G,EAAK8C,IAAK,KAClD,cAAC,GAAD,CAAQL,UAAW,eAAgByD,SARhB,kBAAMjE,EAAWwE,EAAazE,GAAU0E,EAAW1E,IAQtE,SAAgE2E,OAElE,sBAAKlE,UAAWC,KAAOoE,KAAvB,UACE,gCACE,8BAAMrG,IACN,8BAAM+F,OAER,+B,oBCAKO,GAAiBvD,aApBN,SAAClC,GACvB,MAAO,CACLJ,MAAOI,EAAMO,UAAUX,UAIA,SAACuC,GAC1B,MAAO,CACLiD,WAAY,SAAC1E,GACXyB,EnBSuB,SAACzB,GAC5B,MAAO,CACLR,KAAMT,EACNiB,UmBZWgF,CAAchF,KAEzByE,aAAc,SAACzE,GACbyB,EnBYyB,SAACzB,GAC9B,MAAO,CACLR,KAAMR,EACNgB,UmBfWiF,CAAgBjF,KAE3BkF,QAAS,SAAChG,GACRuC,EnBeoB,SAACvC,GACzB,MAAO,CACLM,KAAMP,EACNC,SmBlBWiG,CAAWjG,QAKIsC,EChBiB,SAAC,GAAgD,IAA/CtC,EAA8C,EAA9CA,MAAOwF,EAAuC,EAAvCA,WAAYD,EAA2B,EAA3BA,aAAcS,EAAa,EAAbA,QAC1EE,EAAYlG,EAAMY,KAAI,SAAAC,GAAI,OAC9B,cAAC,GAAD,CAEEtB,KAAMsB,EAAKtB,KACXuB,OAAQD,EAAKjC,GACbuH,cAAetF,EAAKsF,cACpBd,OAAQxE,EAAKwE,OACbC,OAAQzE,EAAKyE,OACbvE,SAAUF,EAAKE,SACfyE,WAAYA,EACZD,aAAcA,GART1E,EAAKjC,OAkBd,OANyB,IAArBsH,EAAUE,QACZC,KAAMC,IAAc,sDAAsDpI,MAAK,SAAAqI,GAC7EP,EAAQO,EAASC,KAAKC,UAKxB,qBAAKlF,UAAWC,KAAOxB,MAAvB,SACGkG,OChBMQ,GAAU,SAAC5E,GACtB,OACE,uBAAMP,UAAWC,IAAOmF,QAAxB,UACE,cAAC,IAAD,CAAOC,KAAK,WAAWC,OAAQ,kBAAM,cAAC,EAAD,OACrC,cAAC,IAAD,CAAOD,KAAK,WAAWC,OAAQ,kBAAM,cAACvC,GAAD,OACrC,cAAC,IAAD,CAAOsC,KAAK,SAASC,OAAQ,kBAAM,cAAChB,GAAD,OACnC,cAAC,IAAD,CAAOe,KAAK,QAAQC,OAAQ,kBAAM,cAAC,GAAD,OAClC,cAAC,IAAD,CAAOD,KAAK,SAASC,OAAQ,kBAAM,cAAC,GAAD,OACnC,cAAC,IAAD,CAAOD,KAAK,YAAYC,OAAQ,kBAAM,cAAC,GAAD,OACtC,cAAC,IAAD,CAAUC,KAAK,IAAIlD,GAAG,iB,oBCvBfmD,GAAS,SAACjF,GACrB,IAAMkF,EAAelF,EAAMd,OAAOtB,WAAWkB,KAAI,SAAAuB,GAAI,OACnD,cAAC,KAAD,CAAuByB,GAAIzB,EAAKvC,KAAMiE,gBAAiBrC,KAAOsC,OAA9D,SAAuE3B,EAAKxC,UAA9DwC,EAAKvD,OAEnB,OACI,qBAAK2C,UAAWC,KAAOyF,IAAvB,SACGD,K,oBCnBEE,GAAS,WAClB,OACI,wBAAQ3F,UAAW,CAACC,KAAO2F,OAAQ3F,KAAOsC,QAAQsD,KAAK,KAAvD,qBCgDOC,GApBH,SAACvF,GACX,OACE,cAAC,KAAD,UACE,sBAAKP,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,GAAD,CAAQP,OAAQc,EAAM1B,MAAMY,SAC5B,cAAC,GAAD,CACEb,YAAa2B,EAAM1B,MAAMD,YACzBK,aAAcsB,EAAM1B,MAAMI,aAC1BS,SAAUa,EAAM1B,MAAMa,SACtBC,UAAWY,EAAM1B,MAAMc,UACvBC,aAAcW,EAAM1B,MAAMe,aAC1BoB,SAAUT,EAAMS,WAElB,cAAC,GAAD,UCrCR+E,IAAST,OACP,cAAC,IAAMU,WAAP,UACE,cAAC,IAAD,CAAUnG,MAAOA,EAAjB,SACE,cAAC,GAAD,CACEhB,MAAOgB,EAAMoG,WACbjF,SAAUnB,EAAMmB,SAASkF,KAAKrG,SAIpCsG,SAASC,eAAe,SAI1B5J,M","file":"static/js/main.e80f1a80.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Posts_posts__vjRnY\",\"postItem\":\"Posts_postItem__1DDXc\",\"img\":\"Posts_img__13knP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3bw9T\",\"dialogsItems\":\"Dialogs_dialogsItems__4lWE6\",\"messages\":\"Dialogs_messages__3tcxs\",\"active\":\"Dialogs_active__28Z6M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__26CNJ\",\"logo\":\"User_logo__3pSD3\",\"info\":\"User_info__2sVTg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__fhGM0\",\"description\":\"ProfileInfo_description__2RJcI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__2hYQh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3cHYR\",\"active\":\"Navbar_active__21R_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__7dIj9\",\"active\":\"Footer_active__3wB70\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1v0yI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Content_content__1uhUL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1BgWt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__1jJZz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__VhMJ8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addMessage\":\"AddMessage_addMessage__1qfK-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1Tukw\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/ava.28e44cb7.png\";","export default __webpack_public_path__ + \"static/media/ava1.4ab0e03f.jpeg\";","export default __webpack_public_path__ + \"static/media/ava2.927a3424.jpeg\";","import {v1} from \"uuid\";\nimport img from \"../images/ava.png\";\nimport img1 from \"../images/ava1.jpeg\";\nimport img2 from \"../images/ava2.jpeg\";\n\nexport type PostItemType = {\n  id: string\n  img: string\n  message: string\n  likesCount: number\n}\nexport type ProfilePageType = typeof initialState\n\nconst ADD_POST = 'ADD_POST'\nconst UPDATE_NEW_POST_TEXT = 'UPDATE_NEW_POST_TEXT'\n\nconst initialState = {\n  myPostsData: [\n    {id: v1(), img: img1, message: 'Hello! How are you', likesCount: 4},\n    {id: v1(), img: img2, message: 'What are doing now?', likesCount: 14},\n  ] as Array<PostItemType>,\n  newPostText: ''\n}\n\nexport const profileReducer = (state: ProfilePageType = initialState, action: ProfileReducerActionsType): ProfilePageType => {\n  switch (action.type) {\n    case ADD_POST:\n      const newPost: PostItemType = {\n        id: v1(),\n        img: img,\n        message: state.newPostText,\n        likesCount: 0\n      }\n      return {\n        ...state,\n        newPostText: '',\n        myPostsData: [...state.myPostsData, {id: v1(), img: img, message: state.newPostText, likesCount: 0}]\n      }\n    case UPDATE_NEW_POST_TEXT:\n      return {\n        ...state,\n        newPostText: action.post\n      }\n    default:\n      return state\n  }\n}\n\nexport type ProfileReducerActionsType = AddPostActionType | OnChangePostActionType\ntype AddPostActionType = ReturnType<typeof addPostAC>\ntype OnChangePostActionType = ReturnType<typeof onChangePostAC>\n\nexport const addPostAC = () => {\n  return {\n    type: ADD_POST\n  } as const\n}\nexport const onChangePostAC = (post: string) => {\n  return {\n    type: UPDATE_NEW_POST_TEXT,\n    post: post\n  } as const\n}","import {v1} from \"uuid\";\nimport {DialogPropsType} from \"../components/Content/Dialogs/Dialog/Dialog\";\nimport {MessageType} from \"../components/Content/Dialogs/Message/Message\";\n\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE_NEW_MESSAGE_TEXT'\nconst ADD_MESSAGE = 'ADD_MESSAGE'\n\nexport type MessagesPageType = typeof initialState\nconst initialState = {\n  dialogsData: [\n    {id: v1(), name: 'Ann'},\n    {id: v1(), name: 'Nick'},\n    {id: v1(), name: 'Jhon'},\n    {id: v1(), name: 'Jane'},\n  ] as Array<DialogPropsType>,\n  messagesData: [\n    {id: v1(), message: 'Hello'},\n    {id: v1(), message: 'How are you?'},\n  ] as Array<MessageType>,\n  newMessageText: '',\n}\n\nexport const dialogsReducer = (state: MessagesPageType = initialState, action: DialogsReducerActionsType): MessagesPageType => {\n  switch (action.type) {\n    case UPDATE_NEW_MESSAGE_TEXT:\n      return {\n        ...state,\n        newMessageText: action.newText\n      }\n    case ADD_MESSAGE:\n      const text = state.newMessageText\n      return {\n        ...state,\n        newMessageText: '',\n        messagesData: [...state.messagesData, {id: v1(), message: text}]\n      }\n    default:\n      return state\n  }\n}\n\nexport type DialogsReducerActionsType = AddMessageActionType | UpdateNewMessageTextActionType\ntype AddMessageActionType = ReturnType<typeof addMessageAC>\ntype UpdateNewMessageTextActionType = ReturnType<typeof updateNewMessageTextAC>\n\nexport const addMessageAC = () => {\n  return {\n    type: ADD_MESSAGE\n  } as const\n}\nexport const updateNewMessageTextAC = (text: string) => {\n  return {\n    type: UPDATE_NEW_MESSAGE_TEXT,\n    newText: text,\n  } as const\n}\n","import {NavigationType} from \"../components/Navbar/Navbar\";\nimport {v1} from \"uuid\";\nimport {ActionsType} from \"./redux-store\";\n\nexport type NavBarType = {\n  navigation: Array<NavigationType>\n}\n\nconst initialState = {\n  navigation: [\n    {id: v1(), pageName: 'Profile', link: '/profile'},\n    {id: v1(), pageName: 'Messages', link: '/dialogs'},\n    {id: v1(), pageName: 'Users', link: '/users'},\n    {id: v1(), pageName: 'News', link: '/news'},\n    {id: v1(), pageName: 'Music', link: '/music'},\n    {id: v1(), pageName: 'Settings', link: '/settings'},\n  ]\n}\n\nexport const navbarReducer = (state: NavBarType = initialState, action: ActionsType) => {\n  return state\n}","\n\nconst initialState = {}\n\nexport const musicReducer = (state: any = initialState, action: any) => {\n  return state\n}","\n\nconst initialState = {}\n\nexport const settingsReducer = (state: any = initialState, action: any) => {\n  return state\n}","\n\nconst initialState = {}\n\nexport const newsReducer = (state: any = initialState, action: any) => {\n  return state\n}","import {UserType} from \"../components/Content/Users/Users\";\n\nexport type UsersType = Array<UserType>\nexport type UsersPageType = { users: UsersType }\n\nconst FOLLOW_USER = 'FOLLOW_USER'\nconst UNFOLLOW_USER = 'UNFOLLOW_USER'\nconst SET_USERS = 'SET_USERS'\n\nconst initialState = {users: []}\n\nexport const usersReducer = (state: UsersPageType = initialState, action: UsersReducerActionsType) => {\n  switch (action.type) {\n    case FOLLOW_USER:\n      return {\n        ...state,\n        users: state.users.map(user => user.id === action.userID ? {...user, followed: true} : user)\n      }\n    case UNFOLLOW_USER:\n      return {\n        ...state,\n        users: state.users.map(user => user.id === action.userID ? {...user, followed: false} : user)\n      }\n    case SET_USERS:\n      return {\n        ...state, users: [...action.users]\n      }\n    default:\n      return state\n  }\n}\n\nexport type UsersReducerActionsType = FollowUsersActionType | UnFollowUsersActionType | SetUsersACType\ntype FollowUsersActionType = ReturnType<typeof followUsersAC>\ntype UnFollowUsersActionType = ReturnType<typeof unFollowUsersAC>\ntype SetUsersACType = ReturnType<typeof setUsersAC>\n\nexport const followUsersAC = (userID: number) => {\n  return {\n    type: FOLLOW_USER,\n    userID\n  } as const\n}\nexport const unFollowUsersAC = (userID: number) => {\n  return {\n    type: UNFOLLOW_USER,\n    userID\n  } as const\n}\nexport const setUsersAC = (users: UsersType) => {\n  return {\n    type: SET_USERS,\n    users\n  } as const\n}\n\n","import {combineReducers, createStore} from \"redux\";\nimport {profileReducer, ProfileReducerActionsType} from \"./profile-reducer\";\nimport {dialogsReducer, DialogsReducerActionsType} from \"./dialogs-reducer\";\nimport {navbarReducer} from \"./navbar-reducer\";\nimport {musicReducer} from \"./music-reduсer\";\nimport {settingsReducer} from \"./settings-reduсer\";\nimport {newsReducer} from \"./news-reduсer\";\nimport {usersReducer, UsersReducerActionsType} from \"./users-reduсer\";\n\nexport type StateType = ReturnType<typeof rootReducer>\nexport type ActionsType = ProfileReducerActionsType | DialogsReducerActionsType | UsersReducerActionsType\n\nlet rootReducer = combineReducers({\n  profilePage: profileReducer,\n  messagesPage: dialogsReducer,\n  usersPage: usersReducer,\n  navBar: navbarReducer,\n  newsPage: newsReducer,\n  musicPage: musicReducer,\n  settingsPage: settingsReducer\n})\n\nexport let store = createStore(rootReducer)\n","export default __webpack_public_path__ + \"static/media/gold-elephant.8fa88fbe.png\";","import image from \"../../images/gold-elephant.png\";\nimport React from \"react\";\nimport styles from './Header.module.scss'\n\nexport const Header = () => {\n    return (\n        <header className={styles.header}>\n            <div>\n                <img src={image} alt=\"ff\"/>\n            </div>\n            <h1>Social network \"GOLDEN ELEPHANT\"</h1>\n        </header>\n    )\n}","import React from 'react'\nimport styles from './ProfileInfo.module.scss'\n\nexport const ProfileInfo = (props: any) => {\n  return (\n    <div className={styles.profileInfo}>\n      <div>\n        <img\n          src={\n            'https://v-thailand.com/wp-content/uploads/2017/12/Slonyi-v-Tailande-2.jpg'\n          }\n          alt={'img'}\n        />\n      </div>\n      <div className={styles.description}>\n        ava + description\n      </div>\n\n    </div>\n  )\n}\n","import React from 'react'\nimport styles from './Posts.module.scss'\nimport {PostItemType} from \"../../../../../Redux/profile-reducer\";\n\ntype PropsType = {\n  posts: Array<PostItemType>\n}\n\nconst Posts: React.FC<PropsType> = ({posts}:PropsType) => {\n  return (\n    <div className={styles.posts}>\n      {posts.map((item: PostItemType) => (\n        <div className={styles.postItem} key={item.id}>\n          <img className={styles.img} src={item.img} alt=\"ava\" />\n          {item.message}\n          <p>Likes <span>{item.likesCount }</span></p>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default Posts\n","import {addPostAC, onChangePostAC, ProfilePageType} from \"../../../../Redux/profile-reducer\";\nimport {MyPosts} from \"./MyPosts\";\nimport {StateType} from \"../../../../Redux/redux-store\";\nimport {connect} from \"react-redux\";\nimport {Dispatch} from \"redux\";\n\ntype mapStateToPropsType = {\n  profilePage: ProfilePageType\n}\ntype mapDispatchToPropsType = {\n  addPost: () => void\n  onChangePost: (post: string) => void\n}\n\nexport type MyPostsPropsType = mapStateToPropsType & mapDispatchToPropsType\n\nconst mapStateToProps = (state: StateType): mapStateToPropsType => {\n  return {\n    profilePage: state.profilePage\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\n  return {\n    addPost: () => {\n      dispatch(addPostAC())\n    },\n    onChangePost: (post: string) => {\n      if(post) dispatch(onChangePostAC(post))\n    }\n  }\n}\n\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n","import React, {ChangeEvent} from 'react'\nimport styles from './MyPosts.module.scss'\nimport Posts from './Posts/Posts'\nimport {MyPostsPropsType} from \"./MyPostsContainer\";\n\nexport const MyPosts: React.FC<MyPostsPropsType> = ({profilePage, ...props}) => {\n  const addPost = () => {\n    props.addPost()\n  }\n\n  const onChangePost = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    const post = e.currentTarget.value\n    if(post) props.onChangePost(post)\n  }\n\n  return (\n    <div className={styles.myPosts}>\n      <h2>MyPosts</h2>\n      <p>\n        <textarea\n          value={profilePage.newPostText}\n          onChange={onChangePost}\n        />\n      </p>\n      <p>\n        <button onClick={addPost}>Add post</button>\n      </p>\n      <Posts posts={profilePage.myPostsData}/>\n    </div>\n  )\n}\n","import React from 'react'\nimport styles from './Profile.module.scss'\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\n\nexport const Profile = () => {\n  return (\n    <div className={styles.profile}>\n      <ProfileInfo/>\n      <MyPostsContainer/>\n    </div>\n  )\n}\n","import React from 'react'\nimport styles from './News.module.scss'\n\nexport const News = (props: any) => {\n    return (\n        <div className={styles.news}>\n            News\n        </div>\n    )\n}\n","import React from 'react'\nimport styles from './Music.module.scss'\n\nexport const Music = (props: any) => {\n    return (\n        <div className={styles.music}>\n            Music\n        </div>\n    )\n}\n","import React from 'react'\nimport styles from './Settings.module.scss'\n\nexport const Settings = (props: any) => {\n  return (\n    <div className={styles.settings}>\n      Settings\n    </div>\n  )\n}\n","import React from 'react'\nimport styles from './Message.module.scss'\n\nexport type MessageType = {\n  message: string\n  id: string\n}\n\nexport const Message = (props: MessageType) => {\n  return (\n    <div className={styles.message}>{props.message}</div>\n  )\n}","import React from 'react'\nimport styles from './Dialog.module.scss'\nimport {NavLink} from 'react-router-dom'\n\nexport type DialogPropsType = {\n  name: string\n  id: string\n}\n\nexport const Dialog = (props: DialogPropsType) => {\n  return (\n    <div className={styles.dialog}>\n      <NavLink to={`/dialogs/${props.id}`} activeClassName={styles.active}>{props.name}</NavLink>\n    </div>\n  )\n}\n","import React, {ChangeEvent} from 'react'\nimport styles from './AddMessage.module.scss'\nimport {DialogPropsType} from \"../Dialog/Dialog\";\nimport {MessageType} from \"../Message/Message\";\n\ntype AddMessagePropsType = {\n  sendMessageClick: () => void\n  changeMessage: (text: string) => void\n  messagesPage: {\n    dialogsData: Array<DialogPropsType>\n    messagesData: Array<MessageType>\n    newMessageText: string\n  }\n  newDialogMessage: string\n}\n\nexport const AddMessage:React.FC<AddMessagePropsType>  = ({messagesPage, newDialogMessage, ...props}) => {\n  const onChangeMessage = (event: ChangeEvent<HTMLTextAreaElement>) => {\n    const text = event.currentTarget.value\n    if (text) props.changeMessage(text)\n  }\n  const onSendMessageClick = () => {\n    props.sendMessageClick()\n  }\n\n  return (\n    <div className={styles.addMessage}>\n      <div>\n          <textarea\n\n            onChange={onChangeMessage}\n            value={newDialogMessage}\n            placeholder=\"Enter your message\"\n          />\n      </div>\n      <div>\n        <button onClick={onSendMessageClick}>Send message</button>\n      </div>\n    </div>\n  )\n}","import {Dialogs} from \"./Dialogs\";\nimport {StateType} from \"../../../Redux/redux-store\";\nimport {addMessageAC, MessagesPageType, updateNewMessageTextAC,} from \"../../../Redux/dialogs-reducer\";\nimport {connect} from \"react-redux\";\nimport {Dispatch} from \"redux\";\n\ntype MapStateToPropsType = {\n  messagesPage: MessagesPageType\n  newDialogMessage: string\n}\ntype MapDispatchToPropsType = {\n  onSendMessageClick: () => void\n  changeMessage: (text: string) => void\n}\n\nexport type DialogsPropsType = MapStateToPropsType & MapDispatchToPropsType\n\nconst mapStateToProps = (state: StateType): MapStateToPropsType => {\n  return {\n    messagesPage: state.messagesPage,\n    newDialogMessage: state.messagesPage.newMessageText\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\n  return {\n    onSendMessageClick: () => {\n      dispatch(addMessageAC())\n    },\n    changeMessage: (text: string) => {\n      if (text) dispatch(updateNewMessageTextAC(text))\n    }\n  }\n}\n\nexport const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)\n\n","import React from 'react'\nimport styles from './Dialogs.module.scss'\nimport {Message, MessageType} from \"./Message/Message\";\nimport {Dialog, DialogPropsType} from \"./Dialog/Dialog\";\nimport {AddMessage} from \"./AddMessage/AddMessage\";\nimport {DialogsPropsType} from \"./DialogsContainer\";\n\nexport const Dialogs: React.FC<DialogsPropsType> = ({messagesPage, onSendMessageClick, changeMessage, newDialogMessage}) => {\n  const dialogsElements = messagesPage.dialogsData.map((elem: DialogPropsType) => (\n    <Dialog\n      key={elem.id}\n      name={elem.name}\n      id={elem.id}\n    />\n  ))\n\n  const messagesElements = messagesPage.messagesData.map((elem: MessageType) => (\n    <Message\n      key={elem.id}\n      message={elem.message}\n      id={elem.id}\n    />\n  ))\n\n  return (\n    <div className={styles.dialogs}>\n      <div className={styles.dialogsItems}>\n        {dialogsElements}\n      </div>\n      <div className={styles.messages}>\n        {messagesElements}\n        <AddMessage\n          newDialogMessage={newDialogMessage}\n          messagesPage={messagesPage}\n          sendMessageClick={onSendMessageClick}\n          changeMessage={changeMessage}\n        />\n      </div>\n    </div>\n  )\n}\n\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport styles from './Button.module.scss'\n\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\ntype ButtonPropsType = DefaultButtonPropsType & {\n  callBack: () => void\n}\n\nexport const Button: React.FC<ButtonPropsType> = ({callBack, className, children}) => {\n  // const finalClassName = `${styles.button} ${className}`\n  const finalClassName = `${styles.button} ${className}`\n\n  return (\n    <button className={finalClassName} onClick={callBack}>{children}</button>\n  )\n}","import React from 'react'\nimport {Button} from \"../../Button/Button\";\nimport styles from './User.module.scss'\nimport img from '../../../../images/ava.png'\n\ntype UserPropsType = {\n  userID: number\n  name: string\n  uniqueUrlName: null | string\n  photos: {\n    small: null | string\n    large: null | string\n  }\n  status: null | string\n  followed: boolean\n  followUser: (id: number) => void\n  unFollowUser: (id: number) => void\n}\n\nexport const User: React.FC<UserPropsType> = ({\n                                                userID, photos, name,\n                                                status, followed,\n                                                unFollowUser, followUser\n                                              }) => {\n  const toggleFollowUser = () => followed ? unFollowUser(userID) : followUser(userID)\n  const titleButton = followed ? 'Unfollow' : 'Follow'\n  // const buttonClassName = {color: 'green'}\n\n  return (\n    <div className={styles.user}>\n      <div className={styles.logo}>\n        <img src={photos.small ? photos.small : img} alt={''}/>\n        <Button className={'buttonFollow'} callBack={toggleFollowUser}>{titleButton}</Button>\n      </div>\n      <div className={styles.info}>\n        <div>\n          <div>{name}</div>\n          <div>{status}</div>\n        </div>\n        <div>\n          {/*<div>{location.country}</div>*/}\n          {/*<div>{location.city}</div>*/}\n        </div>\n      </div>\n    </div>\n  )\n}","import {Users} from \"./Users\";\nimport {connect} from \"react-redux\";\nimport {Dispatch} from \"redux\";\nimport {StateType} from \"../../../Redux/redux-store\";\nimport {followUsersAC, setUsersAC, unFollowUsersAC, UsersType\n} from \"../../../Redux/users-reduсer\";\n\ntype MapStateToPropsType = {\n  users: UsersType\n}\n\ntype MapDispatchToPropsType = {\n  followUser: (userID: number) => void\n  unFollowUser: (userID: number) => void\n  setUser: (users: UsersType) => void\n}\n\nexport type UsersPropsType = MapStateToPropsType & MapDispatchToPropsType\n\nconst mapStateToProps = (state: StateType) => {\n  return {\n    users: state.usersPage.users\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    followUser: (userID: number) => {\n      dispatch(followUsersAC(userID))\n    },\n    unFollowUser: (userID: number) => {\n      dispatch(unFollowUsersAC(userID))\n    },\n    setUser: (users: UsersType) => {\n      dispatch(setUsersAC(users))\n    }\n  }\n}\n\nexport const UsersContainer = connect(mapStateToProps, mapDispatchToProps)(Users)\n\n\n\n\n","import React from 'react'\nimport styles from './Users.module.scss'\nimport {UsersPropsType} from \"./UsersContainer\";\nimport {User} from \"./User/User\";\nimport axios from \"axios\";\n\ntype DataType = {\n  error: null | string\n  totalCount: number\n  items: Array<UserType>\n}\nexport type UserType = {\n  name: string\n  id: number\n  uniqueUrlName: null | string\n  photos: {\n    small: null | string\n    large: null | string\n  }\n  status: null | string\n  followed: boolean\n}\n\nexport const Users: React.FC<UsersPropsType> = ({users, followUser, unFollowUser, setUser}) => {\n  const userItems = users.map(user => (\n    <User\n      key={user.id}\n      name={user.name}\n      userID={user.id}\n      uniqueUrlName={user.uniqueUrlName}\n      photos={user.photos}\n      status={user.status}\n      followed={user.followed}\n      followUser={followUser}\n      unFollowUser={unFollowUser}\n    />\n  ))\n\n  if (userItems.length === 0) {\n    axios.get<DataType>(\"https://social-network.samuraijs.com/api/1.0/users\").then(response => {\n      setUser(response.data.items)\n    })\n  }\n\n  return (\n    <div className={styles.users}>\n      {userItems}\n    </div>\n  )\n}\n\n","import React from 'react'\nimport {Redirect, Route} from 'react-router-dom'\nimport styles from \"./Content.module.scss\"\nimport {Profile} from './Profile/Profile'\nimport {News} from \"./News/News\";\nimport {Music} from \"./Music/Music\";\nimport {Settings} from \"./Settings/Settings\";\nimport {MessageType} from \"./Dialogs/Message/Message\";\nimport {DialogPropsType} from \"./Dialogs/Dialog/Dialog\";\nimport {ActionsType} from \"../../Redux/redux-store\";\nimport {DialogsContainer} from \"./Dialogs/DialogsContainer\";\nimport {PostItemType} from \"../../Redux/profile-reducer\";\nimport {UsersContainer} from \"./Users/UsersContainer\";\n\ntype ContentPropsType = {\n  profilePage: {\n    myPostsData: Array<PostItemType>\n    newPostText: string\n  }\n  messagesPage: {\n    dialogsData: Array<DialogPropsType>\n    messagesData: Array<MessageType>\n    newMessageText: string\n  }\n  dispatch: (action: ActionsType) => void\n  newsPage: {}\n  musicPage: {}\n  settingsPage: {}\n}\n\nexport const Content = (props: ContentPropsType) => {\n  return (\n    <main className={styles.content}>\n      <Route path=\"/profile\" render={() => <Profile/>}/>\n      <Route path=\"/dialogs\" render={() => <DialogsContainer/>}/>\n      <Route path=\"/users\" render={() => <UsersContainer/>}/>\n      <Route path=\"/news\" render={() => <News/>}/>\n      <Route path=\"/music\" render={() => <Music/>}/>\n      <Route path=\"/settings\" render={() => <Settings/>}/>\n      <Redirect from='/' to='/profile'/>\n    </main>\n  )\n}\n","import React from \"react\";\nimport styles from './Navbar.module.scss'\nimport {NavLink} from 'react-router-dom'\n\nexport type NavigationType = {\n  id: string\n  pageName : string\n  link : string\n}\n\ntype NavBarPropsType = {\n  navBar: {\n    navigation: Array<NavigationType>\n  }\n}\n\nexport const Navbar = (props:NavBarPropsType) => {\n  const navLinkItems = props.navBar.navigation.map(item => (\n    <NavLink key={item.id} to={item.link} activeClassName={styles.active}>{item.pageName}</NavLink>\n  ))\n    return (\n        <nav className={styles.nav}>\n          {navLinkItems}\n        </nav>\n    )\n}","import React from \"react\";\nimport styles from \"./Footer.module.scss\"\n\nexport const Footer = () => {\n    return (\n        <footer className={[styles.footer, styles.active].join(' ')}>Footer</footer>\n    )\n}","import React from 'react'\nimport './App.scss'\nimport {Header} from './components/Header/Header'\nimport {Content} from './components/Content/Content'\nimport {Navbar, NavigationType} from './components/Navbar/Navbar'\nimport {Footer} from './components/Footer/Footer'\nimport {BrowserRouter} from 'react-router-dom'\nimport {DialogPropsType} from \"./components/Content/Dialogs/Dialog/Dialog\";\nimport {MessageType} from \"./components/Content/Dialogs/Message/Message\";\nimport {PostItemType} from \"./Redux/profile-reducer\";\nimport {ActionsType} from \"./Redux/redux-store\";\n\ntype AppPropsType = {\n  state: {\n    navBar: {\n      navigation: Array<NavigationType>\n    }\n    profilePage: {\n      myPostsData: Array<PostItemType>\n      newPostText: string\n    }\n    messagesPage: {\n      dialogsData: Array<DialogPropsType>\n      messagesData: Array<MessageType>\n      newMessageText: string\n    }\n    newsPage: {}\n    musicPage: {},\n    settingsPage: {}\n  }\n  dispatch: (action: ActionsType) => void\n}\n\nconst App = (props: AppPropsType) => {\n  return (\n    <BrowserRouter>\n      <div className=\"app\">\n        <Header/>\n        <Navbar navBar={props.state.navBar}/>\n        <Content\n          profilePage={props.state.profilePage}\n          messagesPage={props.state.messagesPage}\n          newsPage={props.state.newsPage}\n          musicPage={props.state.musicPage}\n          settingsPage={props.state.settingsPage}\n          dispatch={props.dispatch}\n        />\n        <Footer/>\n      </div>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","import reportWebVitals from './reportWebVitals';\nimport {store} from \"./Redux/redux-store\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\n\nexport type rerenderEntireTreeType = () => void\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App\n        state={store.getState()}\n        dispatch={store.dispatch.bind(store)}\n      />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}