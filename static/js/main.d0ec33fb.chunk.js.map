{"version":3,"sources":["components/Content/Users/Users.module.scss","components/Content/Profile/ProfileInfo/ProfileInfo.module.scss","components/Content/Profile/Profile.module.scss","components/Content/Dialogs/Dialogs.module.scss","components/Content/Users/User/User.module.scss","components/Content/Profile/MyPosts/Posts/Posts.module.scss","components/Content/Dialogs/Dialog/Dialog.module.scss","components/Navbar/Navbar.module.scss","components/Footer/Footer.module.scss","components/Header/Header.module.scss","components/Content/Content.module.scss","components/Content/Dialogs/Message/Message.module.scss","components/Content/Dialogs/AddMessage/AddMessage.module.scss","components/Content/Button/Button.module.scss","components/Content/Profile/MyPosts/MyPosts.module.scss","reportWebVitals.ts","images/ava.png","images/ava1.jpeg","images/ava2.jpeg","Redux/profile-reducer.ts","Redux/dialogs-reducer.ts","Redux/navbar-reducer.ts","Redux/music-reduсer.ts","Redux/settings-reduсer.ts","Redux/news-reduсer.ts","Redux/users-reduсer.ts","Redux/redux-store.ts","images/gold-elephant.png","components/Header/Header.tsx","components/Content/News/News.tsx","components/Content/Music/Music.tsx","components/Content/Settings/Settings.tsx","components/Content/Dialogs/Message/Message.tsx","components/Content/Dialogs/Dialog/Dialog.tsx","components/Content/Dialogs/AddMessage/AddMessage.tsx","components/Content/Dialogs/DialogsContainer.tsx","components/Content/Dialogs/Dialogs.tsx","components/Content/Button/Button.tsx","components/Content/Users/User/User.tsx","components/Content/Users/Users.tsx","images/Spinner-1s-273px.svg","components/Сommon/Preloader/Preloader.tsx","components/Сommon/AxiosInstance/axiosInstance.ts","components/Content/Users/UsersContainer.tsx","images/job-logo.png","components/Content/Profile/ProfileInfo/ProfileInfo.tsx","components/Content/Profile/MyPosts/Posts/Posts.tsx","components/Content/Profile/MyPosts/MyPostsContainer.tsx","components/Content/Profile/MyPosts/MyPosts.tsx","components/Content/Profile/Profile.tsx","components/Content/Profile/ProfileContainer.tsx","components/Content/Content.tsx","components/Navbar/Navbar.tsx","components/Footer/Footer.tsx","App.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","initialState","myPostsData","id","v1","img","img1","message","likesCount","img2","newPostText","userProfile","UPDATE_NEW_MESSAGE_TEXT","ADD_MESSAGE","dialogsData","name","messagesData","newMessageText","navigation","pageName","link","FOLLOW_USER","UNFOLLOW_USER","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","users","pageSize","totalUsersCount","currentPage","isFetching","rootReducer","combineReducers","profilePage","state","action","type","post","dataUserProfile","messagesPage","newText","text","usersPage","map","user","userID","followed","numberCurrentPage","navBar","newsPage","musicPage","settingsPage","store","createStore","Header","className","styles","header","src","image","alt","News","props","news","Music","music","Settings","settings","Message","Dialog","dialog","to","activeClassName","active","AddMessage","newDialogMessage","addMessage","onChange","event","currentTarget","value","changeMessage","placeholder","onClick","sendMessageClick","DialogsContainer","connect","dispatch","onSendMessageClick","updateNewMessageTextAC","dialogsElements","elem","messagesElements","dialogs","dialogsItems","messages","Button","callBack","children","finalClassName","button","User","photos","status","unFollowUser","followUser","titleButton","logo","small","info","Users","Math","ceil","numberPages","i","push","num","numberPage","selected","onChangedPage","uniqueUrlName","Preloader","style","width","height","spinner","axiosInstance","axios","create","baseURL","withCredentials","headers","UsersApiContainer","setToggleIsFetch","setCurrentPage","get","response","setUsers","data","items","this","setTotalUsersCount","totalCount","React","Component","UsersContainer","ProfileInfo","useState","setLogo","showAvatar","profileInfo","fullName","logoContainer","logoSmall","avatar","lookingForAJob","job","logoLarge","large","Posts","posts","item","postItem","MyPostsContainer","addPost","onChangePost","onChangePostAC","myPosts","e","Profile","console","log","profile","ProfileApiContainer","userId","match","params","setUserProfile","WithRouterProfileApiContainer","withRouter","ConnectedProfileContainer","Content","content","path","render","from","Navbar","navLinkItems","nav","Footer","footer","join","App","ReactDOM","StrictMode","getState","bind","document","getElementById"],"mappings":"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","file":"static/js/main.d0ec33fb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__3aAGB\",\"numberPages\":\"Users_numberPages__3Brqe\",\"numberPage\":\"Users_numberPage__1DrXI\",\"selected\":\"Users_selected__2uXMJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__fhGM0\",\"logoLarge\":\"ProfileInfo_logoLarge__NbdIh\",\"logoContainer\":\"ProfileInfo_logoContainer__gVFQH\",\"logoSmall\":\"ProfileInfo_logoSmall__1cj2Y\",\"job\":\"ProfileInfo_job__2YCre\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1BgWt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3bw9T\",\"dialogsItems\":\"Dialogs_dialogsItems__4lWE6\",\"messages\":\"Dialogs_messages__3tcxs\",\"active\":\"Dialogs_active__28Z6M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__26CNJ\",\"logo\":\"User_logo__3pSD3\",\"info\":\"User_info__2sVTg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Posts_posts__vjRnY\",\"postItem\":\"Posts_postItem__1DDXc\",\"img\":\"Posts_img__13knP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__2hYQh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3cHYR\",\"active\":\"Navbar_active__21R_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__7dIj9\",\"active\":\"Footer_active__3wB70\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1v0yI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Content_content__1uhUL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__VhMJ8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addMessage\":\"AddMessage_addMessage__1qfK-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1Tukw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__1jJZz\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/ava.28e44cb7.png\";","export default __webpack_public_path__ + \"static/media/ava1.4ab0e03f.jpeg\";","export default __webpack_public_path__ + \"static/media/ava2.927a3424.jpeg\";","import {v1} from \"uuid\";\nimport img from \"../images/ava.png\";\nimport img1 from \"../images/ava1.jpeg\";\nimport img2 from \"../images/ava2.jpeg\";\n\nexport type PostItemType = {\n  id: string\n  img: string\n  message: string\n  likesCount: number\n}\n\nexport type DataUserProfileType = {\n  aboutMe: null | string\n  contacts: {\n    facebook: null | string\n    website: null | string\n    vk: null | string\n    twitter: null | string\n    instagram: null | string\n    \"youtube\": null | string\n    github: null | string\n    mainLink: null | string\n  }\n  lookingForAJob: boolean\n  lookingForAJobDescription: null | string\n  \"fullName\": null | string\n  \"userId\": number\n  \"photos\": {\n    \"small\": string | undefined\n    \"large\": string | undefined\n  }\n}\n\nexport type ProfilePageType = typeof initialState\n\nconst ADD_POST = 'ADD_POST'\nconst UPDATE_NEW_POST_TEXT = 'UPDATE_NEW_POST_TEXT'\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\n\nconst initialState = {\n  myPostsData: [\n    {id: v1(), img: img1, message: 'Hello! How are you', likesCount: 4},\n    {id: v1(), img: img2, message: 'What are doing now?', likesCount: 14},\n  ] as Array<PostItemType>,\n  newPostText: '',\n  userProfile: {} as DataUserProfileType\n}\n\nexport const profileReducer = (state: ProfilePageType = initialState, action: ProfileReducerActionsType): ProfilePageType => {\n  switch (action.type) {\n    case ADD_POST:\n      const newPost: PostItemType = {\n        id: v1(),\n        img: img,\n        message: state.newPostText,\n        likesCount: 0\n      }\n      return {\n        ...state,\n        newPostText: '',\n        myPostsData: [...state.myPostsData, {id: v1(), img: img, message: state.newPostText, likesCount: 0}]\n      }\n    case UPDATE_NEW_POST_TEXT:\n      return {\n        ...state,\n        newPostText: action.post\n      }\n    case SET_USER_PROFILE:\n      return {\n        ...state,\n        userProfile: action.dataUserProfile\n      }\n    default:\n      return state\n  }\n}\n\nexport type ProfileReducerActionsType = AddPostActionType | OnChangePostActionType | SetUserProfileActionType\ntype AddPostActionType = ReturnType<typeof addPostAC>\ntype OnChangePostActionType = ReturnType<typeof onChangePostAC>\ntype SetUserProfileActionType = ReturnType<typeof setUserProfile>\n\nexport const addPostAC = () => {\n  return {\n    type: ADD_POST\n  } as const\n}\nexport const onChangePostAC = (post: string) => {\n  return {\n    type: UPDATE_NEW_POST_TEXT,\n    post: post\n  } as const\n}\nexport const setUserProfile = (dataUserProfile: DataUserProfileType) => {\n  return {\n    type: SET_USER_PROFILE, dataUserProfile\n  } as const\n}","import {v1} from \"uuid\";\nimport {DialogPropsType} from \"../components/Content/Dialogs/Dialog/Dialog\";\nimport {MessageType} from \"../components/Content/Dialogs/Message/Message\";\n\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE_NEW_MESSAGE_TEXT'\nconst ADD_MESSAGE = 'ADD_MESSAGE'\n\nexport type MessagesPageType = typeof initialState\nconst initialState = {\n  dialogsData: [\n    {id: v1(), name: 'Ann'},\n    {id: v1(), name: 'Nick'},\n    {id: v1(), name: 'Jhon'},\n    {id: v1(), name: 'Jane'},\n  ] as Array<DialogPropsType>,\n  messagesData: [\n    {id: v1(), message: 'Hello'},\n    {id: v1(), message: 'How are you?'},\n  ] as Array<MessageType>,\n  newMessageText: '',\n}\n\nexport const dialogsReducer = (state: MessagesPageType = initialState, action: DialogsReducerActionsType): MessagesPageType => {\n  switch (action.type) {\n    case UPDATE_NEW_MESSAGE_TEXT:\n      return {\n        ...state,\n        newMessageText: action.newText\n      }\n    case ADD_MESSAGE:\n      const text = state.newMessageText\n      return {\n        ...state,\n        newMessageText: '',\n        messagesData: [...state.messagesData, {id: v1(), message: text}]\n      }\n    default:\n      return state\n  }\n}\n\nexport type DialogsReducerActionsType = AddMessageActionType | UpdateNewMessageTextActionType\ntype AddMessageActionType = ReturnType<typeof addMessageAC>\ntype UpdateNewMessageTextActionType = ReturnType<typeof updateNewMessageTextAC>\n\nexport const addMessageAC = () => {\n  return {\n    type: ADD_MESSAGE\n  } as const\n}\nexport const updateNewMessageTextAC = (text: string) => {\n  return {\n    type: UPDATE_NEW_MESSAGE_TEXT,\n    newText: text,\n  } as const\n}\n","import {NavigationType} from \"../components/Navbar/Navbar\";\nimport {v1} from \"uuid\";\nimport {ActionsType} from \"./redux-store\";\n\nexport type NavBarType = {\n  navigation: Array<NavigationType>\n}\n\nconst initialState = {\n  navigation: [\n    {id: v1(), pageName: 'Profile', link: '/profile'},\n    {id: v1(), pageName: 'Messages', link: '/dialogs'},\n    {id: v1(), pageName: 'Users', link: '/users'},\n    {id: v1(), pageName: 'News', link: '/news'},\n    {id: v1(), pageName: 'Music', link: '/music'},\n    {id: v1(), pageName: 'Settings', link: '/settings'},\n  ]\n}\n\nexport const navbarReducer = (state: NavBarType = initialState, action: ActionsType) => {\n  return state\n}","\n\nconst initialState = {}\n\nexport const musicReducer = (state: any = initialState, action: any) => {\n  return state\n}","\n\nconst initialState = {}\n\nexport const settingsReducer = (state: any = initialState, action: any) => {\n  return state\n}","\n\nconst initialState = {}\n\nexport const newsReducer = (state: any = initialState, action: any) => {\n  return state\n}","export type UserType = {\n  name: string\n  id: number\n  uniqueUrlName: null | string\n  photos: {\n    small: null | string\n    large: null | string\n  }\n  status: null | string\n  followed: boolean\n}\nexport type UsersPageType = {\n  users: Array<UserType>\n  pageSize: number\n  totalUsersCount: number\n  currentPage: number\n  isFetching: boolean\n}\n\nconst FOLLOW_USER = 'FOLLOW_USER'\nconst UNFOLLOW_USER = 'UNFOLLOW_USER'\nconst SET_USERS = 'SET_USERS'\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\n\nconst initialState = {\n  users: [],\n  pageSize: 20,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: false\n}\n\nexport const usersReducer = (state: UsersPageType = initialState, action: UsersReducerActionsType) => {\n  switch (action.type) {\n    case FOLLOW_USER:\n      return {\n        ...state,\n        users: state.users.map(user => user.id === action.userID ? {...user, followed: true} : user)\n      }\n    case UNFOLLOW_USER:\n      return {\n        ...state,\n        users: state.users.map(user => user.id === action.userID ? {...user, followed: false} : user)\n      }\n    case SET_USERS:\n      return {\n        ...state, users: action.users\n      }\n    case SET_CURRENT_PAGE:\n      return {\n        ...state, currentPage: action.numberCurrentPage\n      }\n    case SET_TOTAL_USERS_COUNT:\n      return {\n        ...state, totalUsersCount: action.totalUsersCount\n      }\n    case TOGGLE_IS_FETCHING:\n      return {\n        ...state, isFetching: !state.isFetching\n      }\n    default:\n      return state\n  }\n}\n\nexport type UsersReducerActionsType =\n  FollowUsersActionType\n  | UnFollowUsersActionType\n  | SetUsersActionType\n  | SetCurrentPageActionType\n  | SetTotalUsersCountActionType\n  | SetToggleIsFetchActionType\ntype FollowUsersActionType = ReturnType<typeof followUser>\ntype UnFollowUsersActionType = ReturnType<typeof unFollowUser>\ntype SetUsersActionType = ReturnType<typeof setUsers>\ntype SetCurrentPageActionType = ReturnType<typeof setCurrentPage>\ntype SetTotalUsersCountActionType = ReturnType<typeof setTotalUsersCount>\ntype SetToggleIsFetchActionType = ReturnType<typeof setToggleIsFetch>\n\nexport const followUser = (userID: number) => {\n  return {\n    type: FOLLOW_USER,\n    userID\n  } as const\n}\nexport const unFollowUser = (userID: number) => {\n  return {\n    type: UNFOLLOW_USER,\n    userID\n  } as const\n}\nexport const setUsers = (users: Array<UserType>) => {\n  return {\n    type: SET_USERS,\n    users\n  } as const\n}\nexport const setCurrentPage = (numberCurrentPage: number) => {\n  return {\n    type: SET_CURRENT_PAGE,\n    numberCurrentPage\n  } as const\n}\nexport const setTotalUsersCount = (totalUsersCount: number) => {\n  return {\n    type: SET_TOTAL_USERS_COUNT,\n    totalUsersCount\n  } as const\n}\nexport const setToggleIsFetch = (isFetching: boolean) => {\n  return {\n    type: TOGGLE_IS_FETCHING, isFetching\n  } as const\n}\n\n","import {combineReducers, createStore} from \"redux\";\nimport {profileReducer, ProfileReducerActionsType} from \"./profile-reducer\";\nimport {dialogsReducer, DialogsReducerActionsType} from \"./dialogs-reducer\";\nimport {navbarReducer} from \"./navbar-reducer\";\nimport {musicReducer} from \"./music-reduсer\";\nimport {settingsReducer} from \"./settings-reduсer\";\nimport {newsReducer} from \"./news-reduсer\";\nimport {usersReducer, UsersReducerActionsType} from \"./users-reduсer\";\n\nexport type StateType = ReturnType<typeof rootReducer>\nexport type ActionsType = ProfileReducerActionsType | DialogsReducerActionsType | UsersReducerActionsType\n\nlet rootReducer = combineReducers({\n  profilePage: profileReducer,\n  messagesPage: dialogsReducer,\n  usersPage: usersReducer,\n  navBar: navbarReducer,\n  newsPage: newsReducer,\n  musicPage: musicReducer,\n  settingsPage: settingsReducer\n})\n\nexport let store = createStore(rootReducer)\n","export default __webpack_public_path__ + \"static/media/gold-elephant.8fa88fbe.png\";","import image from \"../../images/gold-elephant.png\";\nimport React from \"react\";\nimport styles from './Header.module.scss'\n\nexport const Header = () => {\n    return (\n        <header className={styles.header}>\n            <div>\n                <img src={image} alt=\"ff\"/>\n            </div>\n            <h1>Social network \"GOLDEN ELEPHANT\"</h1>\n        </header>\n    )\n}","import React from 'react'\nimport styles from './News.module.scss'\n\nexport const News = (props: any) => {\n    return (\n        <div className={styles.news}>\n            News\n        </div>\n    )\n}\n","import React from 'react'\nimport styles from './Music.module.scss'\n\nexport const Music = (props: any) => {\n    return (\n        <div className={styles.music}>\n            Music\n        </div>\n    )\n}\n","import React from 'react'\nimport styles from './Settings.module.scss'\n\nexport const Settings = (props: any) => {\n  return (\n    <div className={styles.settings}>\n      Settings\n    </div>\n  )\n}\n","import React from 'react'\nimport styles from './Message.module.scss'\n\nexport type MessageType = {\n  message: string\n  id: string\n}\n\nexport const Message = (props: MessageType) => {\n  return (\n    <div className={styles.message}>{props.message}</div>\n  )\n}","import React from 'react'\nimport styles from './Dialog.module.scss'\nimport {NavLink} from 'react-router-dom'\n\nexport type DialogPropsType = {\n  name: string\n  id: string\n}\n\nexport const Dialog = (props: DialogPropsType) => {\n  return (\n    <div className={styles.dialog}>\n      <NavLink to={`/dialogs/${props.id}`} activeClassName={styles.active}>{props.name}</NavLink>\n    </div>\n  )\n}\n","import React, {ChangeEvent} from 'react'\nimport styles from './AddMessage.module.scss'\nimport {DialogPropsType} from \"../Dialog/Dialog\";\nimport {MessageType} from \"../Message/Message\";\n\ntype AddMessagePropsType = {\n  sendMessageClick: () => void\n  changeMessage: (text: string) => void\n  messagesPage: {\n    dialogsData: Array<DialogPropsType>\n    messagesData: Array<MessageType>\n    newMessageText: string\n  }\n  newDialogMessage: string\n}\n\nexport const AddMessage:React.FC<AddMessagePropsType>  = ({messagesPage, newDialogMessage, ...props}) => {\n  const onChangeMessage = (event: ChangeEvent<HTMLTextAreaElement>) => {\n    const text = event.currentTarget.value\n    if (text) props.changeMessage(text)\n  }\n  const onSendMessageClick = () => {\n    props.sendMessageClick()\n  }\n\n  return (\n    <div className={styles.addMessage}>\n      <div>\n          <textarea\n\n            onChange={onChangeMessage}\n            value={newDialogMessage}\n            placeholder=\"Enter your message\"\n          />\n      </div>\n      <div>\n        <button onClick={onSendMessageClick}>Send message</button>\n      </div>\n    </div>\n  )\n}","import {Dialogs} from \"./Dialogs\";\nimport {StateType} from \"../../../Redux/redux-store\";\nimport {addMessageAC, MessagesPageType, updateNewMessageTextAC,} from \"../../../Redux/dialogs-reducer\";\nimport {connect} from \"react-redux\";\nimport {Dispatch} from \"redux\";\n\ntype MapStateToPropsType = {\n  messagesPage: MessagesPageType\n  newDialogMessage: string\n}\ntype MapDispatchToPropsType = {\n  onSendMessageClick: () => void\n  changeMessage: (text: string) => void\n}\n\nexport type DialogsPropsType = MapStateToPropsType & MapDispatchToPropsType\n\nconst mapStateToProps = (state: StateType): MapStateToPropsType => {\n  return {\n    messagesPage: state.messagesPage,\n    newDialogMessage: state.messagesPage.newMessageText\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\n  return {\n    onSendMessageClick: () => {\n      dispatch(addMessageAC())\n    },\n    changeMessage: (text: string) => {\n      if (text) dispatch(updateNewMessageTextAC(text))\n    }\n  }\n}\n\nexport const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)\n\n","import React from 'react'\nimport styles from './Dialogs.module.scss'\nimport {Message, MessageType} from \"./Message/Message\";\nimport {Dialog, DialogPropsType} from \"./Dialog/Dialog\";\nimport {AddMessage} from \"./AddMessage/AddMessage\";\nimport {DialogsPropsType} from \"./DialogsContainer\";\n\nexport const Dialogs: React.FC<DialogsPropsType> = ({messagesPage, onSendMessageClick, changeMessage, newDialogMessage}) => {\n  const dialogsElements = messagesPage.dialogsData.map((elem: DialogPropsType) => (\n    <Dialog\n      key={elem.id}\n      name={elem.name}\n      id={elem.id}\n    />\n  ))\n\n  const messagesElements = messagesPage.messagesData.map((elem: MessageType) => (\n    <Message\n      key={elem.id}\n      message={elem.message}\n      id={elem.id}\n    />\n  ))\n\n  return (\n    <div className={styles.dialogs}>\n      <div className={styles.dialogsItems}>\n        {dialogsElements}\n      </div>\n      <div className={styles.messages}>\n        {messagesElements}\n        <AddMessage\n          newDialogMessage={newDialogMessage}\n          messagesPage={messagesPage}\n          sendMessageClick={onSendMessageClick}\n          changeMessage={changeMessage}\n        />\n      </div>\n    </div>\n  )\n}\n\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport styles from './Button.module.scss'\n\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\ntype ButtonPropsType = DefaultButtonPropsType & {\n  callBack: () => void\n}\n\nexport const Button: React.FC<ButtonPropsType> = ({callBack, className, children}) => {\n  // const finalClassName = `${styles.button} ${className}`\n  const finalClassName = `${styles.button} ${className}`\n\n  return (\n    <button className={finalClassName} onClick={callBack}>{children}</button>\n  )\n}","import React from 'react'\nimport {NavLink} from 'react-router-dom'\nimport {Button} from \"../../Button/Button\";\nimport styles from './User.module.scss'\nimport img from '../../../../images/ava.png'\n\ntype UserPropsType = {\n  userID: number\n  name: string\n  uniqueUrlName: null | string\n  photos: {\n    small: null | string\n    large: null | string\n  }\n  status: null | string\n  followed: boolean\n  followUser: (id: number) => void\n  unFollowUser: (id: number) => void\n}\n\nexport const User: React.FC<UserPropsType> = ({\n                                                userID, photos, name,\n                                                status, followed,\n                                                unFollowUser, followUser\n                                              }) => {\n  const toggleFollowUser = () => followed ? unFollowUser(userID) : followUser(userID)\n  const titleButton = followed ? 'Unfollow' : 'Follow'\n\n  return (\n    <div className={styles.user}>\n      <div className={styles.logo}>\n        <NavLink to={`/profile/${userID}`}>\n          <img src={photos.small ? photos.small : img} alt={''}/>\n        </NavLink>\n        <Button className={'buttonFollow'} callBack={toggleFollowUser}>{titleButton}</Button>\n      </div>\n      <div className={styles.info}>\n        <div>\n          <div>{name}</div>\n          <div>{status}</div>\n        </div>\n        <div>\n          {/*<div>{location.country}</div>*/}\n          {/*<div>{location.city}</div>*/}\n        </div>\n      </div>\n    </div>\n  )\n}","import React from 'react'\nimport styles from \"./Users.module.scss\";\nimport {User} from \"./User/User\";\nimport {UserType} from \"../../../Redux/users-reduсer\";\n\ntype PropsType = {\n  users: Array<UserType>\n  pageSize: number\n  totalUsersCount: number\n  currentPage: number\n  followUser: (userID: number) => void\n  unFollowUser: (userID: number) => void\n  onChangedPage: (numberCurrentPage: number) => void\n}\n\nexport const Users = (props: PropsType) => {\n  let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\n  let numberPages = []\n  // for (let i = 1; i <= pagesCount; i++) {\n  for (let i = 1; i <= 16; i++) {\n    numberPages.push(i)\n  }\n  return (\n    <div className={styles.users}>\n      <div className={styles.numberPages}>\n        {numberPages.map(num => (\n          <div\n            className={props.currentPage === num ? `${styles.numberPage} ${styles.selected}` : styles.numberPage}\n            onClick={() => {\n              props.onChangedPage(num)\n            }}\n          >\n            {num}\n          </div>\n        ))}\n      </div>\n      {props.users.map(user => (\n        <User\n          key={user.id}\n          name={user.name}\n          userID={user.id}\n          uniqueUrlName={user.uniqueUrlName}\n          photos={user.photos}\n          status={user.status}\n          followed={user.followed}\n          followUser={props.followUser}\n          unFollowUser={props.unFollowUser}\n        />\n      ))}\n    </div>\n  )\n}","export default __webpack_public_path__ + \"static/media/Spinner-1s-273px.2072535f.svg\";","import spinner from \"../../../images/Spinner-1s-273px.svg\";\nimport React from \"react\";\n\nexport const Preloader = () => {\n  return (\n    <div>\n      <img style={{width: '64px', height: '64px'}} src={spinner} alt={'circle'}/>\n    </div>\n  )\n}","//базовые настройки запроса в axios\nimport axios from \"axios\";\n\nexport const axiosInstance = axios.create({\n  baseURL: 'https://social-network.samuraijs.com/api/1.0',\n  withCredentials: true,\n  headers: {\n    'API-key': 'b1080483-6498-445e-9780-91e9c47f08f9'\n  }\n})","import {connect} from \"react-redux\";\nimport {StateType} from \"../../../Redux/redux-store\";\nimport {\n  followUser, setCurrentPage, setToggleIsFetch, setTotalUsersCount,\n  setUsers, unFollowUser, UserType\n} from \"../../../Redux/users-reduсer\";\nimport React from \"react\";\nimport {Users} from \"./Users\";\nimport {Preloader} from \"../../Сommon/Preloader/Preloader\";\nimport {axiosInstance} from \"../../Сommon/AxiosInstance/axiosInstance\";\n\ntype DataUsersType = {\n  error: null | string\n  totalCount: number\n  items: Array<UserType>\n}\n\nclass UsersApiContainer extends React.Component <UsersPropsType> {\n  componentDidMount() {\n    this.props.setToggleIsFetch(true) //меняем статус preloader\n    axiosInstance.get<DataUsersType>(`users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\n      .then(response => {\n        this.props.setToggleIsFetch(false)\n        this.props.setUsers(response.data.items) // отправляем в store users\n        this.props.setTotalUsersCount(response.data.totalCount) //отправляем в store кол-во users\n      })\n  }\n\n  //запрос на сервер после изменения компоненты\n  onChangedPage = (numberCurrentPage: number) => {\n    this.props.setToggleIsFetch(true)  //меняем статус preloader\n    this.props.setCurrentPage(numberCurrentPage) //отправляем в store кол-во номер текущей страницы\n    axiosInstance.get<DataUsersType>(`users?page=${numberCurrentPage}&count=${this.props.pageSize}`)\n      .then(response => {\n        this.props.setToggleIsFetch(false)\n        this.props.setUsers(response.data.items) // отправляем в store users\n      })\n  }\n\n  render() {\n    return (\n      <>\n        {this.props.isFetching ? <Preloader/> :\n          <Users\n            users={this.props.users}\n            totalUsersCount={this.props.totalUsersCount}\n            pageSize={this.props.pageSize}\n            currentPage={this.props.currentPage}\n            followUser={this.props.followUser}\n            unFollowUser={this.props.unFollowUser}\n            onChangedPage={this.onChangedPage}\n          />}\n      </>\n    )\n  }\n}\n\ntype MapStateToPropsType = {\n  users: Array<UserType>\n  pageSize: number\n  totalUsersCount: number\n  currentPage: number\n  isFetching: boolean\n}\ntype MapDispatchToPropsType = {\n  followUser: (userID: number) => void\n  unFollowUser: (userID: number) => void\n  setUsers: (users: Array<UserType>) => void\n  setCurrentPage: (numberCurrentPage: number) => void\n  setTotalUsersCount: (totalUsersCount: number) => void\n  setToggleIsFetch: (isFetching: boolean) => void\n}\nexport type UsersPropsType = MapStateToPropsType & MapDispatchToPropsType\n\nconst mapStateToProps = (state: StateType) => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching,\n  }\n}\n\nexport const UsersContainer = connect<MapStateToPropsType, MapDispatchToPropsType, {}, StateType>\n(mapStateToProps, {\n  followUser, unFollowUser, setUsers, setCurrentPage, setTotalUsersCount, setToggleIsFetch,\n})(UsersApiContainer)\n\n\n\n\n","export default __webpack_public_path__ + \"static/media/job-logo.b290acaf.png\";","import React, {useState} from 'react'\nimport styles from './ProfileInfo.module.scss'\nimport job from './../../../../images/job-logo.png'\nimport avatar from './../../../../images/ava.png'\nimport {DataUserProfileType} from \"../../../../Redux/profile-reducer\";\nimport {Preloader} from \"../../../Сommon/Preloader/Preloader\";\n\ntype PropsType = {\n  userProfile: DataUserProfileType\n}\n\nexport const ProfileInfo = ({userProfile}: PropsType) => {\n  const [logo, setLogo] = useState(false)\n\n  const showAvatar = () => {\n    setLogo(true)\n  }\n  const hideAvatar = () => {\n    setLogo(false)\n  }\n  return (\n    <div className={styles.profileInfo}>\n      <p>{userProfile.fullName}</p>\n      <div className={styles.logoContainer}>\n        {userProfile.photos ?\n          <>\n            <img\n              className={styles.logoSmall}\n              src={userProfile.photos.small ? userProfile.photos.small : avatar}\n              onClick={userProfile.photos.small ? showAvatar : ()=>{}}\n              alt={'avatar'}\n            />\n            {userProfile.lookingForAJob &&\n            <img className={styles.job}\n                 src={job}\n                 onClick={userProfile.photos.small ? showAvatar : ()=>{}}\n                 alt={'avatar'}/>\n            }\n          </>\n          : <Preloader/>}\n      </div>\n      {userProfile.photos && logo ?\n        <img\n          className={styles.logoLarge}\n          src={userProfile.photos.large}\n          onClick={userProfile.photos.large ? hideAvatar : ()=>{} }\n          alt={'avatar'}\n        /> :\n        ''}\n    </div>\n  )\n}\n","import React from 'react'\nimport styles from './Posts.module.scss'\nimport {PostItemType} from \"../../../../../Redux/profile-reducer\";\n\ntype PropsType = {\n  posts: Array<PostItemType>\n}\n\nconst Posts: React.FC<PropsType> = ({posts}:PropsType) => {\n  return (\n    <div className={styles.posts}>\n      {posts.map((item: PostItemType) => (\n        <div className={styles.postItem} key={item.id}>\n          <img className={styles.img} src={item.img} alt=\"ava\" />\n          {item.message}\n          <p>Likes <span>{item.likesCount }</span></p>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default Posts\n","import {addPostAC, onChangePostAC, ProfilePageType} from \"../../../../Redux/profile-reducer\";\nimport {MyPosts} from \"./MyPosts\";\nimport {StateType} from \"../../../../Redux/redux-store\";\nimport {connect} from \"react-redux\";\nimport {Dispatch} from \"redux\";\n\ntype MapStateToPropsType = {\n  profilePage: ProfilePageType\n}\ntype MapDispatchToPropsType = {\n  addPost: () => void\n  onChangePost: (post: string) => void\n}\nexport type MyPostsPropsType = MapStateToPropsType & MapDispatchToPropsType\n\nconst mapStateToProps = (state: StateType): MapStateToPropsType => {\n  return {\n    profilePage: state.profilePage\n  }\n}\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\n  return {\n    addPost: () => {\n      dispatch(addPostAC())\n    },\n    onChangePost: (post: string) => {\n      if(post) dispatch(onChangePostAC(post))\n    }\n  }\n}\n\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n","import React, {ChangeEvent} from 'react'\nimport styles from './MyPosts.module.scss'\nimport Posts from './Posts/Posts'\nimport {MyPostsPropsType} from \"./MyPostsContainer\";\n\nexport const MyPosts: React.FC<MyPostsPropsType> = ({profilePage, ...props}) => {\n  const addPost = () => {\n    props.addPost()\n  }\n\n  const onChangePost = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    const post = e.currentTarget.value\n    if(post) props.onChangePost(post)\n  }\n\n  return (\n    <div className={styles.myPosts}>\n      <h2>MyPosts</h2>\n      <p>\n        <textarea\n          value={profilePage.newPostText}\n          onChange={onChangePost}\n        />\n      </p>\n      <p>\n        <button onClick={addPost}>Add post</button>\n      </p>\n      <Posts posts={profilePage.myPostsData}/>\n    </div>\n  )\n}\n","import React from 'react'\nimport styles from './Profile.module.scss'\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\nimport {DataUserProfileType} from \"../../../Redux/profile-reducer\";\n\ntype PropsType = {\n  userProfile: DataUserProfileType\n}\n\nexport const Profile = (props: PropsType) => {\n\n  //в консоле см. свойство match в пропсах\n  console.log(\"Props: \", props)\n\n  return (\n    <div className={styles.profile}>\n      <ProfileInfo userProfile={props.userProfile}/>\n      <MyPostsContainer/>\n    </div>\n  )\n}\n","import React from 'react'\nimport styles from './Profile.module.scss'\nimport {Profile} from \"./Profile\";\nimport {axiosInstance} from \"../../Сommon/AxiosInstance/axiosInstance\";\nimport {connect} from \"react-redux\";\nimport {StateType} from \"../../../Redux/redux-store\";\nimport {DataUserProfileType, setUserProfile} from \"../../../Redux/profile-reducer\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\n\ntype MapStateToPropsType = {\n  userProfile: DataUserProfileType\n}\ntype MapDispatchToPropsType = {\n  setUserProfile: (dataUserProfile: DataUserProfileType) => void\n}\ntype ProfileApiPropsType = MapStateToPropsType & MapDispatchToPropsType\n//типизация withRouter\n//https://stackoverflow.com/questions/48219432/react-router-typescript-errors-on-withrouter-after-updating-version\ntype PathParamsType = {\n  userId: string // = let userId = this.props.match.params.userId\n}\ntype PropsType = RouteComponentProps<PathParamsType> & ProfileApiPropsType\n\nclass ProfileApiContainer extends React.Component<PropsType> {\n\n  componentDidMount() {\n    let userId = this.props.match.params.userId\n    console.log(\"ProfileApiContainer Props: \", this.props)\n    //если profile/\n    if (!userId) {\n      userId = '2'\n    }\n    axiosInstance.get<DataUserProfileType>(`profile/${userId}`)\n      .then(response => {\n        this.props.setUserProfile(response.data) // отправляем в store userProfile\n      })\n  }\n\n  render() {\n    return (\n      <div className={styles.profile}>\n        <Profile {...this.props} userProfile={this.props.userProfile}/>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state: StateType): MapStateToPropsType => {\n  return {\n    userProfile: state.profilePage.userProfile\n  }\n}\n\n//оборачиваем ProfileApiContainer в WithRouterProfileApiContainer\nconst WithRouterProfileApiContainer = withRouter(ProfileApiContainer)\n//оборачиваем WithRouterProfileApiContainer в ConnectedProfileContainer\n//типизация connect: MapStateToPropsType + MapDispatchToPropsType + StateType + объект пропсов,\n// которые передается в компоненту ProfileContainer в Content.tsx\nexport const ConnectedProfileContainer = connect<MapStateToPropsType, MapDispatchToPropsType, {}, StateType>\n(mapStateToProps, {setUserProfile})(WithRouterProfileApiContainer)","import React from 'react'\nimport {Redirect, Route} from 'react-router-dom'\nimport styles from \"./Content.module.scss\"\nimport {News} from \"./News/News\";\nimport {Music} from \"./Music/Music\";\nimport {Settings} from \"./Settings/Settings\";\nimport {MessageType} from \"./Dialogs/Message/Message\";\nimport {DialogPropsType} from \"./Dialogs/Dialog/Dialog\";\nimport {ActionsType} from \"../../Redux/redux-store\";\nimport {DialogsContainer} from \"./Dialogs/DialogsContainer\";\nimport {PostItemType} from \"../../Redux/profile-reducer\";\nimport {UsersContainer} from \"./Users/UsersContainer\";\nimport {ConnectedProfileContainer} from \"./Profile/ProfileContainer\";\n\ntype ContentPropsType = {\n  profilePage: {\n    myPostsData: Array<PostItemType>\n    newPostText: string\n  }\n  messagesPage: {\n    dialogsData: Array<DialogPropsType>\n    messagesData: Array<MessageType>\n    newMessageText: string\n  }\n  dispatch: (action: ActionsType) => void\n  newsPage: {}\n  musicPage: {}\n  settingsPage: {}\n}\n\nexport const Content = (props: ContentPropsType) => {\n  return (\n    <main className={styles.content}>\n      <Route path=\"/profile/:userId?\" render={() => <ConnectedProfileContainer/>}/>\n      <Route path=\"/dialogs\" render={() => <DialogsContainer/>}/>\n      <Route path=\"/users\" render={() => <UsersContainer/>}/>\n      <Route path=\"/news\" render={() => <News/>}/>\n      <Route path=\"/music\" render={() => <Music/>}/>\n      <Route path=\"/settings\" render={() => <Settings/>}/>\n      <Redirect from='/' to='/profile' />\n    </main>\n  )\n}\n","import React from \"react\";\nimport styles from './Navbar.module.scss'\nimport {NavLink} from 'react-router-dom'\n\nexport type NavigationType = {\n  id: string\n  pageName : string\n  link : string\n}\n\ntype NavBarPropsType = {\n  navBar: {\n    navigation: Array<NavigationType>\n  }\n}\n\nexport const Navbar = (props:NavBarPropsType) => {\n  const navLinkItems = props.navBar.navigation.map(item => (\n    <NavLink key={item.id} to={item.link} activeClassName={styles.active}>{item.pageName}</NavLink>\n  ))\n    return (\n        <nav className={styles.nav}>\n          {navLinkItems}\n        </nav>\n    )\n}","import React from \"react\";\nimport styles from \"./Footer.module.scss\"\n\nexport const Footer = () => {\n    return (\n        <footer className={[styles.footer, styles.active].join(' ')}>Footer</footer>\n    )\n}","import React from 'react'\nimport './App.scss'\nimport {Header} from './components/Header/Header'\nimport {Content} from './components/Content/Content'\nimport {Navbar, NavigationType} from './components/Navbar/Navbar'\nimport {Footer} from './components/Footer/Footer'\nimport {HashRouter} from 'react-router-dom'\nimport {DialogPropsType} from \"./components/Content/Dialogs/Dialog/Dialog\";\nimport {MessageType} from \"./components/Content/Dialogs/Message/Message\";\nimport {PostItemType} from \"./Redux/profile-reducer\";\nimport {ActionsType} from \"./Redux/redux-store\";\n\ntype AppPropsType = {\n  state: {\n    navBar: {\n      navigation: Array<NavigationType>\n    }\n    profilePage: {\n      myPostsData: Array<PostItemType>\n      newPostText: string\n    }\n    messagesPage: {\n      dialogsData: Array<DialogPropsType>\n      messagesData: Array<MessageType>\n      newMessageText: string\n    }\n    newsPage: {}\n    musicPage: {},\n    settingsPage: {}\n  }\n  dispatch: (action: ActionsType) => void\n}\n\nconst App = (props: AppPropsType) => {\n  return (\n    <HashRouter>\n      <div className=\"app\">\n        <Header/>\n        <Navbar navBar={props.state.navBar}/>\n        <Content\n          profilePage={props.state.profilePage}\n          messagesPage={props.state.messagesPage}\n          newsPage={props.state.newsPage}\n          musicPage={props.state.musicPage}\n          settingsPage={props.state.settingsPage}\n          dispatch={props.dispatch}\n        />\n        <Footer/>\n      </div>\n    </HashRouter>\n  )\n}\n\nexport default App\n","import reportWebVitals from './reportWebVitals';\nimport {store} from \"./Redux/redux-store\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\n\nexport type rerenderEntireTreeType = () => void\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App\n        state={store.getState()}\n        dispatch={store.dispatch.bind(store)}\n      />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}